#+TITLE: 任务（无他，唯手熟尔）



* 2019年7月22日


将这个完善:


#+DOWNLOADED: c:/Users/ADMINI~1/AppData/Local/Temp/scrot.png @ 2019-07-22 08:22:59
[[file:img/scrot_2019-07-22_08-22-59.png]]



* 2019年7月18日

- 梳理购物车的总体流程
  1. 浏览商品
  2. 加入购物车/管理购物车
  3. 进行结算
     a. 输入收货信息
     b. 进入支付页面/生成新的订单
     c. 用户扫码支付/其他方式支付
     d. 改变订单状态到已支付 

- 思考，如何设计订单表
- 将代码敲一遍

* 2019年7月17日

- 复习、熟悉 cookie/session 概念，了解机制
- 熟悉购物车网站的基本逻辑，熟练操作相关代码

* 2019年7月16日

务必做到:
1. 理解 el/jstl 的相关知识，认真敲代码
2. 预习 session 基本知识，了解购物车的基本逻辑

可选任务:

- -[[file:img/scrot_2019-07-16_07-48-49.png]]


* 2019年7月15日

务必做到:
1. 将今天的代码理解，并勤加练习
2. 预习 el 表达式，以及 jstl

建议做到:
1. 将今天的示例代码重构为 el+jstl 的样式

* 2019年7月12日

尝试将我们学到的东西，与现实中的具体业务进行联系。

比如，要做一个 *销售图书* 相关的小网站:
- 整个网站的操作流程大约应该是什么样的？
- 分哪些角色？
- 分哪些功能？

如果销售的是图书，那么核心是 book。

分析完毕之后，站在卖家的角度，实现一个 *图书管理* 方面的功能。

即:
- CRUD of Book

* 2019年7月9日

为 student 搭建一个 *CRUD* 服务。基本的项目结构如下:

[[file:img/scrot_2019-07-09_02-47-58.png]]

首页，以及相关功能:


[[file:img/scrot_2019-07-09_06-11-01.png]]


* 2019年7月5日

HTTP 协议:
1. 整理、理解常用的状态码
2. 整理、理解常用的 Header

Servlet:
1. 理解 JSP 的原理，以及 Servlet 的生命周期
2. 将学生的列表、删除功能，使用 Servlet + JSP 的方式重构

多写，多练。谢谢合作。

* 2019年7月4日


[[file:img/scrot_2019-07-04_08-29-22.png]]


1. 将代码认真敲 N 遍
2. 了解 HTTP 协议的基本内容 （基本概念是什么？请求方法有哪些？什么是 404/500 错误？）
3. 实现上面页面中的“删除”，页面上有删除的效果（js 实现）
4. 尝试进行真正的删除

另外，了解下 jsp 跟 servlet 之间的关系。

* 2019年7月1日

首先，了解 dom 以及事件机制。

其次，使用 JS 操纵 DOM 节点:
- 添加背景色，根据分数，使用样式重点突出低分、高分
- 点击删除后，可以删除当前行的数据

额外任务:
- 点击标题栏，进行排序

注，以上都是使用 JS 操纵 html 页面的 dom，跟 jsp 没关系。

[[file:img/scrot_2019-07-02_02-27-17.png]]



#+BEGIN_SRC html
  <html>
  <head>
      <title>我是一个示例</title>
      <style>
          table, tr, th, td {
              border: 1px solid red;
              padding: 1em;
          }

          table {
              border-collapse: collapse;
              border-bottom: 3px solid green;
          }
      </style>
  </head>
  <body>
  <table id="mytable">
      <thead>
      <tr>
          <th>姓名</th>
          <th>分数</th>
          <th>操作</th>
      </tr>
      </thead>
      <tbody>
      <tr>
          <td>zhangsan
          </td>
          <td>95.0
          </td>
          <td>删除</td>
      </tr>
      <tr>
          <td>lisi
          </td>
          <td>63.0
          </td>
          <td>删除</td>
      </tr>
      <tr>
          <td>wangwu
          </td>
          <td>55.0
          </td>
          <td>删除</td>
      </tr>
      <tr>
          <td>zhaoliu
          </td>
          <td>88.0
          </td>
          <td>删除</td>
      </tr>
      <tr>
          <td>xxxx
          </td>
          <td>92.0
          </td>
          <td>删除</td>
      </tr>
      <tr>
          <td>yyyy
          </td>
          <td>79.0
          </td>
          <td>删除</td>
      </tr>
      </tbody>
  </table>
  <script>

  </script>
  </body>
  </html>
#+END_SRC

* 2019年6月28日

将前面的“从数据库读取数据，并使用 JSP 进行页面渲染”，使用纯 Servlet 的方式实现一次，
并了解相关概念:
- 什么是 Servlet?
- 什么是 Servlet 接口？
- 什么是 Request 对象？
- 什么是 Response?
- 如何接收客户端发送的 Parameter?

有余力的同学在此基础上，添加“增加学生”的功能，
要求能将数据通过页面插入到数据库中。

* 2019年6月26日

使用纯 JSP 页面，实现从数据库中读取数据，并渲染到页面的过程。

提示:
- 使用之前 SqlServer 中已有的数据 （学生管理中的学生表？）
- 要在 tomcat 运行后，能看到最终的效果
- 页面 *尽量美观* ！！！

* 2019年6月25日

替换 Java 中标准输出 (System.out) 为进行语音播报。

提示:
- System.setOut
- 语音播报实现，善于使用搜索引擎

* 2019年6月5日

使用 Java/JS/C# 实现一个函数，模拟命令行下敲入命令之后，系统的处理:
- 比如名字 ~getFilenameFromCmd(currentDir, command)~
- 返回命令相对应的执行文件，可能是 ~.bat/.exe/.cmd~ 格式
- 如果命令没有找到对应文件，则报错

提示:
#+BEGIN_SRC java
  public class Main {
      public static void main(String[] args) {
          System.out.println(System.getenv("PATH"));
      }
  }
#+END_SRC

步骤:
1. *分析问题*，题目要求要做什么事
2. 借助流程图，展现自己分析的结果
3. *解决问题*，选择一门语言，将自己的分析思路实现出来


可以借助 TDD 的方式，进行思路的梳理跟问题的解决:
#+BEGIN_SRC js
  function getPathforCmd (cwd, cmd) {

    
      return "cmd 所对应的那个可执行文件";
  }

  // TDD (Test Driven Development) 测试驱动开发
  function test1 () {
      var t1 = getPathforCmd("c:/", "sqlite3") == "e:/xxx/sqlite3.exe";
      var t2 = getPathforCmd("c:/", "sqlite4") == "";
      var t3 = getPathforCmd("c:/", "d:/sqlite4") == "";
      var t4 = getPathforCmd("c:/test", "sqlite3") == "c:/test/sqlite3.bat";
      var t5 = getPathforCmd("c:/test", "d:/sqlite3") == "d:/sqlite3.bat";

      if (t1 && t2 && t3 && t4 && t5) {
          console.log("测试通过");
      }
  }
#+END_SRC

demo:
#+BEGIN_SRC java
  public class Main {
      public static void main (String... args) {

      }

      public String getCmdPath (String dir, String cmd) {
          if (cmd.contains(":")) { // 绝对路径
              return getPathFile(cmd);
          } else { // 相对路径
              String fname = dir + "/" + cmd;
              File f = getPathFile(fname);
              if (f != null) { // 是否在当前文件夹下存在对应的文件
                  return f.getAbsolutePath();
              } else { // 如果当前目录下没有，那么迭代环境变量查找
                  for (String p : System.getenv("path").split(";")) {
                      File f = getPathFile(p + "/" + cmd);
                      if (f.exists()) return f.getAbsolutePath();
                  }
                  return null;
              }
          }
      }
      private String getPathFile (String path) {
          if (path.contains(".") && new File(path).exists()) { // 如果路径具备后缀名，并且存在这个文件
              return path;
          }
          if (!path.contains(".")) {
              for (String p : Arrays.asAlist(".cmd", ".exe", ".bat")) {
                  File f = new File (path + "/" + p);
                  if (f.exists()) return f.getAbsolutePath();
              }
          }
          return null;
      }
  }
#+END_SRC

实现参考:
#+BEGIN_SRC java
  import java.io.File;
  import java.util.Arrays;
  import java.util.Scanner;

  public class ReadCmdFile {
      public static void main(String[] args) {
          ReadCmdFile rcf = new ReadCmdFile();
          while (true) {
              Scanner scanner = new Scanner(System.in);
              String cmd = scanner.nextLine();
              System.out.println(rcf.readCmdFile("C:", cmd));
          }
      }

      public String readCmdFile(String dir, String cmd) {
          if (new File(cmd).isAbsolute()) { // 处理是绝对路径的情况
              if (cmd.contains(".")) {      // 如果路径中已经有后缀名
                  File f = new File(cmd);
                  return f.exists() ? f.getAbsolutePath() : null;
              }
              for (String ext : Arrays.asList(".bat", ".cmd", ".exe")) { // 如果没有后缀名，添加上再判断
                  File f = new File(cmd + ext);
                  if (f.exists()) return f.getAbsolutePath();
              }
          } else {
              String path = readCmdFile(dir, dir + "/" + cmd);    // 判断当前文件夹下有没有对应文件
              if (path != null) return path;                      // 如果当前文件夹下存在，那么就找对了
              for (String p : System.getenv("path").split(";")) { // 否则从 PATH 里面进行匹配
                  path = readCmdFile(dir, p + "/" + cmd);
                  if (path != null) return path;                  // 只要找到，就返回
              }
          }
          return null;                                            // 如果上面没找到，就返回 null
      }
  }
#+END_SRC

* 2019年6月4日

用 sqlite 为 “我的书单” 应用，创建数据库表。

提示:
- book
- author
- category
- tag

* 2019年1月1日（清明节作业）

- 初步任务 ::
          读取某个文件夹下所有的文件，然后将其重命名：

          + aaa.jpg  → aaa_20190102.jpg // 如果是照片，读取 EXIF 中的创建日期。考查文件的操作，考查字符串操作
          + 已经是上述格式的话跳过修改    // 考查正则匹配知识

- 进阶任务 ::

          改完名字之后，将所有文件打包成一个压缩文件（rar/zip） // 考查IO流及压缩的基本知识

- 额外任务 ::

          将这个压缩文件通过 JAVA 发送邮件的方式，发给 yaowuer@qq.com  //考查邮件发送的基本知识


提示:
1. 如何读取一个文件夹下的所有文件
2. 如何将其重命名
3. 如何将一个文件打包成压缩文件
4. 如何发送这个压缩文件


plan:
1. 19 6
2. 19 8
3. 20 9
4. 18 5
5. 19 8
6. 16 5
7. 18 6
8. 18 8
