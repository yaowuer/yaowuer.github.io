#+TITLE: 任务



* 2019年7月1日

使用 JS 操纵 DOM 节点:
- 添加背景色，隔行变色
- 点击删除后，可以删除当前行的数据

如果上述完成了，可以尝试增加 “添加” 表格行的功能。

注，以上都是使用 JS 操纵 html 页面的 dom，跟 jsp 没关系。


[[file:img/scrot_2019-07-01_06-43-04.png]]


* 2019年6月28日

将前面的“从数据库读取数据，并使用 JSP 进行页面渲染”，使用纯 Servlet 的方式实现一次，
并了解相关概念:
- 什么是 Servlet?
- 什么是 Servlet 接口？
- 什么是 Request 对象？
- 什么是 Response?
- 如何接收客户端发送的 Parameter?

有余力的同学在此基础上，添加“增加学生”的功能，
要求能将数据通过页面插入到数据库中。

* 2019年6月26日

使用纯 JSP 页面，实现从数据库中读取数据，并渲染到页面的过程。

提示:
- 使用之前 SqlServer 中已有的数据 （学生管理中的学生表？）
- 要在 tomcat 运行后，能看到最终的效果
- 页面 *尽量美观* ！！！

* 2019年6月25日

替换 Java 中标准输出 (System.out) 为进行语音播报。

提示:
- System.setOut
- 语音播报实现，善于使用搜索引擎

* 2019年6月5日

使用 Java/JS/C# 实现一个函数，模拟命令行下敲入命令之后，系统的处理:
- 比如名字 ~getFilenameFromCmd(currentDir, command)~
- 返回命令相对应的执行文件，可能是 ~.bat/.exe/.cmd~ 格式
- 如果命令没有找到对应文件，则报错

提示:
#+BEGIN_SRC java
  public class Main {
      public static void main(String[] args) {
          System.out.println(System.getenv("PATH"));
      }
  }
#+END_SRC

步骤:
1. *分析问题*，题目要求要做什么事
2. 借助流程图，展现自己分析的结果
3. *解决问题*，选择一门语言，将自己的分析思路实现出来


可以借助 TDD 的方式，进行思路的梳理跟问题的解决:
#+BEGIN_SRC js
  function getPathforCmd (cwd, cmd) {

    
      return "cmd 所对应的那个可执行文件";
  }

  // TDD (Test Driven Development) 测试驱动开发
  function test1 () {
      var t1 = getPathforCmd("c:/", "sqlite3") == "e:/xxx/sqlite3.exe";
      var t2 = getPathforCmd("c:/", "sqlite4") == "";
      var t3 = getPathforCmd("c:/", "d:/sqlite4") == "";
      var t4 = getPathforCmd("c:/test", "sqlite3") == "c:/test/sqlite3.bat";
      var t5 = getPathforCmd("c:/test", "d:/sqlite3") == "d:/sqlite3.bat";

      if (t1 && t2 && t3 && t4 && t5) {
          console.log("测试通过");
      }
  }
#+END_SRC

demo:
#+BEGIN_SRC java
  public class Main {
      public static void main (String... args) {

      }

      public String getCmdPath (String dir, String cmd) {
          if (cmd.contains(":")) { // 绝对路径
              return getPathFile(cmd);
          } else { // 相对路径
              String fname = dir + "/" + cmd;
              File f = getPathFile(fname);
              if (f != null) { // 是否在当前文件夹下存在对应的文件
                  return f.getAbsolutePath();
              } else { // 如果当前目录下没有，那么迭代环境变量查找
                  for (String p : System.getenv("path").split(";")) {
                      File f = getPathFile(p + "/" + cmd);
                      if (f.exists()) return f.getAbsolutePath();
                  }
                  return null;
              }
          }
      }
      private String getPathFile (String path) {
          if (path.contains(".") && new File(path).exists()) { // 如果路径具备后缀名，并且存在这个文件
              return path;
          }
          if (!path.contains(".")) {
              for (String p : Arrays.asAlist(".cmd", ".exe", ".bat")) {
                  File f = new File (path + "/" + p);
                  if (f.exists()) return f.getAbsolutePath();
              }
          }
          return null;
      }
  }
#+END_SRC

实现参考:
#+BEGIN_SRC java
  import java.io.File;
  import java.util.Arrays;
  import java.util.Scanner;

  public class ReadCmdFile {
      public static void main(String[] args) {
          ReadCmdFile rcf = new ReadCmdFile();
          while (true) {
              Scanner scanner = new Scanner(System.in);
              String cmd = scanner.nextLine();
              System.out.println(rcf.readCmdFile("C:", cmd));
          }
      }

      public String readCmdFile(String dir, String cmd) {
          if (new File(cmd).isAbsolute()) { // 处理是绝对路径的情况
              if (cmd.contains(".")) {      // 如果路径中已经有后缀名
                  File f = new File(cmd);
                  return f.exists() ? f.getAbsolutePath() : null;
              }
              for (String ext : Arrays.asList(".bat", ".cmd", ".exe")) { // 如果没有后缀名，添加上再判断
                  File f = new File(cmd + ext);
                  if (f.exists()) return f.getAbsolutePath();
              }
          } else {
              String path = readCmdFile(dir, dir + "/" + cmd);    // 判断当前文件夹下有没有对应文件
              if (path != null) return path;                      // 如果当前文件夹下存在，那么就找对了
              for (String p : System.getenv("path").split(";")) { // 否则从 PATH 里面进行匹配
                  path = readCmdFile(dir, p + "/" + cmd);
                  if (path != null) return path;                  // 只要找到，就返回
              }
          }
          return null;                                            // 如果上面没找到，就返回 null
      }
  }
#+END_SRC

* 2019年6月4日

用 sqlite 为 “我的书单” 应用，创建数据库表。

提示:
- book
- author
- category
- tag

* 2019年1月1日（清明节作业）

- 初步任务 ::
          读取某个文件夹下所有的文件，然后将其重命名：

          + aaa.jpg  → aaa_20190102.jpg // 如果是照片，读取 EXIF 中的创建日期。考查文件的操作，考查字符串操作
          + 已经是上述格式的话跳过修改    // 考查正则匹配知识

- 进阶任务 ::

          改完名字之后，将所有文件打包成一个压缩文件（rar/zip） // 考查IO流及压缩的基本知识

- 额外任务 ::

          将这个压缩文件通过 JAVA 发送邮件的方式，发给 yaowuer@qq.com  //考查邮件发送的基本知识


提示:
1. 如何读取一个文件夹下的所有文件
2. 如何将其重命名
3. 如何将一个文件打包成压缩文件
4. 如何发送这个压缩文件


plan:
1. 19 6
2. 19 8
3. 20 9
4. 18 5
5. 19 8
6. 16 5
7. 18 6
8. 18 8
